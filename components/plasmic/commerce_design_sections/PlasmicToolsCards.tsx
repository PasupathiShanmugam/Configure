// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2agBYMh2jpAvvmaRHpXzbz
// Component: RSp7Y09OV5MF

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 2agBYMh2jpAvvmaRHpXzbz/projectcss
import sty from "./PlasmicToolsCards.module.css"; // plasmic-import: RSp7Y09OV5MF/css

import BackupIcon from "./icons/PlasmicIcon__Backup"; // plasmic-import: Ktlu1azLDXFo/icon
import DeployedCodeIcon from "./icons/PlasmicIcon__DeployedCode"; // plasmic-import: c449FnVVE4dF/icon
import PersonCheckIcon from "./icons/PlasmicIcon__PersonCheck"; // plasmic-import: zOBxFI_h4ze8/icon
import VerifiedUserIcon from "./icons/PlasmicIcon__VerifiedUser"; // plasmic-import: LRfR5HdDj829/icon
import ScienceIcon from "./icons/PlasmicIcon__Science"; // plasmic-import: So0OR0Pnp4Dt/icon
import FindInPageIcon from "./icons/PlasmicIcon__FindInPage"; // plasmic-import: LQgZWpjayMfi/icon
import BarChartIcon from "./icons/PlasmicIcon__BarChart"; // plasmic-import: MFft-zedHhcb/icon
import SearchIcon from "./icons/PlasmicIcon__Search"; // plasmic-import: PVGpPDzYor8l/icon
import CodeIcon from "./icons/PlasmicIcon__Code"; // plasmic-import: j37OpiBZLbGA/icon
import EditNoteIcon from "./icons/PlasmicIcon__EditNote"; // plasmic-import: jEoR6_uS1SNN/icon
import AccountTree2Icon from "./icons/PlasmicIcon__AccountTree2"; // plasmic-import: -ICt3WH7izMU/icon
import CloudIcon from "./icons/PlasmicIcon__Cloud"; // plasmic-import: Hb_3QFXH-e7F/icon
import OpenInFullIcon from "./icons/PlasmicIcon__OpenInFull"; // plasmic-import: jUcnO9l5HxI9/icon
import KeyboardArrowDownIcon from "./icons/PlasmicIcon__KeyboardArrowDown"; // plasmic-import: RsegoFOVmJQI/icon
import AddIcon from "./icons/PlasmicIcon__Add"; // plasmic-import: CmJgc_I_6CEn/icon

createPlasmicElementProxy;

export type PlasmicToolsCards__VariantMembers = {};
export type PlasmicToolsCards__VariantsArgs = {};
type VariantPropType = keyof PlasmicToolsCards__VariantsArgs;
export const PlasmicToolsCards__VariantProps = new Array<VariantPropType>();

export type PlasmicToolsCards__ArgsType = {};
type ArgPropType = keyof PlasmicToolsCards__ArgsType;
export const PlasmicToolsCards__ArgProps = new Array<ArgPropType>();

export type PlasmicToolsCards__OverridesType = {
  root?: Flex__<"div">;
  config?: Flex__<"div">;
  spaceTitle?: Flex__<"div">;
  title?: Flex__<"div">;
  connectorsInUse?: Flex__<"div">;
  connectorsInUse2?: Flex__<"div">;
  clickOnTheAnyConnectorToViewOrModify?: Flex__<"div">;
  clickOnTheAnyConnectorToViewOrModify2?: Flex__<"div">;
  buttons?: Flex__<"div">;
  secondary?: Flex__<"div">;
  frame1000004774?: Flex__<"div">;
  create?: Flex__<"div">;
  primary?: Flex__<"div">;
  addMore?: Flex__<"div">;
  layout?: Flex__<"div">;
  autoLayout?: Flex__<"div">;
  input?: Flex__<"div">;
  main?: Flex__<"div">;
  inner?: Flex__<"div">;
  label?: Flex__<"div">;
  backup?: Flex__<"div">;
  frame1000004808?: Flex__<"div">;
  frame427320505?: Flex__<"div">;
  deployedCode?: Flex__<"div">;
  frame427320506?: Flex__<"div">;
  personCheck?: Flex__<"div">;
  frame427320504?: Flex__<"div">;
  verifiedUser?: Flex__<"div">;
  frame427320503?: Flex__<"div">;
  science?: Flex__<"div">;
  frame427320498?: Flex__<"div">;
  findInPage?: Flex__<"div">;
  frame427320502?: Flex__<"div">;
  barChart?: Flex__<"div">;
  frame427320501?: Flex__<"div">;
  search?: Flex__<"div">;
  frame427320499?: Flex__<"div">;
  code?: Flex__<"div">;
  frame427320507?: Flex__<"div">;
  editNote?: Flex__<"div">;
  frame427320490?: Flex__<"div">;
  accountTree?: Flex__<"div">;
  frame427320500?: Flex__<"div">;
  cloud?: Flex__<"div">;
  underline?: Flex__<"div">;
  input2?: Flex__<"div">;
  label2?: Flex__<"div">;
  label3?: Flex__<"div">;
  underline2?: Flex__<"div">;
  input3?: Flex__<"div">;
  label4?: Flex__<"div">;
  frame1000004846?: Flex__<"div">;
  label5?: Flex__<"div">;
  openInFull?: Flex__<"div">;
  input4?: Flex__<"div">;
  label6?: Flex__<"div">;
  label7?: Flex__<"div">;
  underline3?: Flex__<"div">;
  input5?: Flex__<"div">;
  label8?: Flex__<"div">;
  label9?: Flex__<"div">;
  underline4?: Flex__<"div">;
  source?: Flex__<"div">;
  main2?: Flex__<"div">;
  layout2?: Flex__<"div">;
  scroll?: Flex__<"div">;
  frame427320159?: Flex__<"div">;
  frame427320156?: Flex__<"div">;
  frame427320192?: Flex__<"div">;
  frame427320202?: Flex__<"div">;
  frame427320167?: Flex__<"div">;
  frame427320203?: Flex__<"div">;
  frame427320161?: Flex__<"div">;
  frame427320157?: Flex__<"div">;
  frame427320198?: Flex__<"div">;
  main3?: Flex__<"div">;
  frame1000004815?: Flex__<"div">;
  label10?: Flex__<"div">;
  keyboardArrowDown?: Flex__<"div">;
  frame427320204?: Flex__<"div">;
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit?: Flex__<"div">;
  frame1000004844?: Flex__<"div">;
  label11?: Flex__<"div">;
  toggle?: Flex__<"div">;
  rectangle3467709?: Flex__<"div">;
  rectangle3467710?: Flex__<"div">;
  label12?: Flex__<"div">;
  frame1000004845?: Flex__<"div">;
  label13?: Flex__<"div">;
  toggle2?: Flex__<"div">;
  rectangle3467711?: Flex__<"div">;
  rectangle3467712?: Flex__<"div">;
  label14?: Flex__<"div">;
  frame427320162?: Flex__<"div">;
  frame427320158?: Flex__<"div">;
  frame427320199?: Flex__<"div">;
  main4?: Flex__<"div">;
  frame1000004816?: Flex__<"div">;
  label15?: Flex__<"div">;
  keyboardArrowDown2?: Flex__<"div">;
  frame427320205?: Flex__<"div">;
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit2?: Flex__<"div">;
  frame1000004847?: Flex__<"div">;
  label16?: Flex__<"div">;
  toggle3?: Flex__<"div">;
  rectangle3467713?: Flex__<"div">;
  rectangle3467714?: Flex__<"div">;
  label17?: Flex__<"div">;
  frame1000004848?: Flex__<"div">;
  label18?: Flex__<"div">;
  toggle4?: Flex__<"div">;
  rectangle3467715?: Flex__<"div">;
  rectangle3467716?: Flex__<"div">;
  label19?: Flex__<"div">;
  frame427320163?: Flex__<"div">;
  frame427320160?: Flex__<"div">;
  frame427320206?: Flex__<"div">;
  main5?: Flex__<"div">;
  frame1000004817?: Flex__<"div">;
  label20?: Flex__<"div">;
  keyboardArrowDown3?: Flex__<"div">;
  frame427320207?: Flex__<"div">;
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit3?: Flex__<"div">;
  frame1000004849?: Flex__<"div">;
  label21?: Flex__<"div">;
  toggle5?: Flex__<"div">;
  rectangle3467717?: Flex__<"div">;
  rectangle3467718?: Flex__<"div">;
  label22?: Flex__<"div">;
  frame1000004850?: Flex__<"div">;
  label23?: Flex__<"div">;
  toggle6?: Flex__<"div">;
  rectangle3467719?: Flex__<"div">;
  rectangle3467720?: Flex__<"div">;
  label24?: Flex__<"div">;
  frame427320164?: Flex__<"div">;
  frame427320165?: Flex__<"div">;
  frame427320208?: Flex__<"div">;
  main6?: Flex__<"div">;
  frame1000004818?: Flex__<"div">;
  label25?: Flex__<"div">;
  keyboardArrowDown4?: Flex__<"div">;
  frame427320209?: Flex__<"div">;
  frame1000004851?: Flex__<"div">;
  label26?: Flex__<"div">;
  toggle7?: Flex__<"div">;
  rectangle3467721?: Flex__<"div">;
  rectangle3467722?: Flex__<"div">;
  label27?: Flex__<"div">;
  frame1000004852?: Flex__<"div">;
  label28?: Flex__<"div">;
  toggle8?: Flex__<"div">;
  rectangle3467723?: Flex__<"div">;
  rectangle3467724?: Flex__<"div">;
  label29?: Flex__<"div">;
  frame1000004820?: Flex__<"div">;
  frame427320508?: Flex__<"div">;
  frame1000004853?: Flex__<"div">;
  add?: Flex__<"div">;
};

export interface DefaultToolsCardsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicToolsCards__RenderFunc(props: {
  variants: PlasmicToolsCards__VariantsArgs;
  args: PlasmicToolsCards__ArgsType;
  overrides: PlasmicToolsCards__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"config"}
            data-plasmic-override={overrides.config}
            hasGap={true}
            className={classNames(projectcss.all, sty.config)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"spaceTitle"}
              data-plasmic-override={overrides.spaceTitle}
              hasGap={true}
              className={classNames(projectcss.all, sty.spaceTitle)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"title"}
                data-plasmic-override={overrides.title}
                hasGap={true}
                className={classNames(projectcss.all, sty.title)}
              >
                <div
                  data-plasmic-name={"connectorsInUse"}
                  data-plasmic-override={overrides.connectorsInUse}
                  className={classNames(projectcss.all, sty.connectorsInUse)}
                >
                  <div
                    data-plasmic-name={"connectorsInUse2"}
                    data-plasmic-override={overrides.connectorsInUse2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.connectorsInUse2
                    )}
                  >
                    {"Configure"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"clickOnTheAnyConnectorToViewOrModify"}
                  data-plasmic-override={
                    overrides.clickOnTheAnyConnectorToViewOrModify
                  }
                  className={classNames(
                    projectcss.all,
                    sty.clickOnTheAnyConnectorToViewOrModify
                  )}
                >
                  <div
                    data-plasmic-name={"clickOnTheAnyConnectorToViewOrModify2"}
                    data-plasmic-override={
                      overrides.clickOnTheAnyConnectorToViewOrModify2
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.clickOnTheAnyConnectorToViewOrModify2
                    )}
                  >
                    {"Modify details to define connector"}
                  </div>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"buttons"}
                data-plasmic-override={overrides.buttons}
                hasGap={true}
                className={classNames(projectcss.all, sty.buttons)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"secondary"}
                  data-plasmic-override={overrides.secondary}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.secondary)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000004774"}
                    data-plasmic-override={overrides.frame1000004774}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000004774)}
                  >
                    <div
                      data-plasmic-name={"create"}
                      data-plasmic-override={overrides.create}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.create
                      )}
                    >
                      {"Cancel"}
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"primary"}
                  data-plasmic-override={overrides.primary}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.primary)}
                >
                  <div
                    data-plasmic-name={"addMore"}
                    data-plasmic-override={overrides.addMore}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.addMore
                    )}
                  >
                    {"Update"}
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"layout"}
              data-plasmic-override={overrides.layout}
              className={classNames(projectcss.all, sty.layout)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"autoLayout"}
                data-plasmic-override={overrides.autoLayout}
                hasGap={true}
                className={classNames(projectcss.all, sty.autoLayout)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"input"}
                  data-plasmic-override={overrides.input}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.input)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"main"}
                    data-plasmic-override={overrides.main}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.main)}
                  >
                    <div
                      data-plasmic-name={"inner"}
                      data-plasmic-override={overrides.inner}
                      className={classNames(projectcss.all, sty.inner)}
                    >
                      <div
                        data-plasmic-name={"label"}
                        data-plasmic-override={overrides.label}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label
                        )}
                      >
                        {"Upload an icon (optional)"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"backup"}
                      data-plasmic-override={overrides.backup}
                      className={classNames(projectcss.all, sty.backup)}
                    >
                      <BackupIcon
                        className={classNames(projectcss.all, sty.svg__btPkB)}
                        role={"img"}
                      />
                    </div>
                  </Stack__>
                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1000004808"}
                      data-plasmic-override={overrides.frame1000004808}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1000004808
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320505"}
                        data-plasmic-override={overrides.frame427320505}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320505
                        )}
                      >
                        <div
                          data-plasmic-name={"deployedCode"}
                          data-plasmic-override={overrides.deployedCode}
                          className={classNames(
                            projectcss.all,
                            sty.deployedCode
                          )}
                        >
                          <DeployedCodeIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nJ7Zi
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320506"}
                        data-plasmic-override={overrides.frame427320506}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320506
                        )}
                      >
                        <div
                          data-plasmic-name={"personCheck"}
                          data-plasmic-override={overrides.personCheck}
                          className={classNames(
                            projectcss.all,
                            sty.personCheck
                          )}
                        >
                          <PersonCheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bdBko
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320504"}
                        data-plasmic-override={overrides.frame427320504}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320504
                        )}
                      >
                        <div
                          data-plasmic-name={"verifiedUser"}
                          data-plasmic-override={overrides.verifiedUser}
                          className={classNames(
                            projectcss.all,
                            sty.verifiedUser
                          )}
                        >
                          <VerifiedUserIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__sY6Fv
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320503"}
                        data-plasmic-override={overrides.frame427320503}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320503
                        )}
                      >
                        <div
                          data-plasmic-name={"science"}
                          data-plasmic-override={overrides.science}
                          className={classNames(projectcss.all, sty.science)}
                        >
                          <ScienceIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hx1Jq
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320498"}
                        data-plasmic-override={overrides.frame427320498}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320498
                        )}
                      >
                        <div
                          data-plasmic-name={"findInPage"}
                          data-plasmic-override={overrides.findInPage}
                          className={classNames(projectcss.all, sty.findInPage)}
                        >
                          <FindInPageIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___8JXeS
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320502"}
                        data-plasmic-override={overrides.frame427320502}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320502
                        )}
                      >
                        <div
                          data-plasmic-name={"barChart"}
                          data-plasmic-override={overrides.barChart}
                          className={classNames(projectcss.all, sty.barChart)}
                        >
                          <BarChartIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__cTezJ
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320501"}
                        data-plasmic-override={overrides.frame427320501}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320501
                        )}
                      >
                        <div
                          data-plasmic-name={"search"}
                          data-plasmic-override={overrides.search}
                          className={classNames(projectcss.all, sty.search)}
                        >
                          <SearchIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lhhMf
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320499"}
                        data-plasmic-override={overrides.frame427320499}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320499
                        )}
                      >
                        <div
                          data-plasmic-name={"code"}
                          data-plasmic-override={overrides.code}
                          className={classNames(projectcss.all, sty.code)}
                        >
                          <CodeIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__i2UEf
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320507"}
                        data-plasmic-override={overrides.frame427320507}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320507
                        )}
                      >
                        <div
                          data-plasmic-name={"editNote"}
                          data-plasmic-override={overrides.editNote}
                          className={classNames(projectcss.all, sty.editNote)}
                        >
                          <EditNoteIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mjnwc
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320490"}
                        data-plasmic-override={overrides.frame427320490}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320490
                        )}
                      >
                        <div
                          data-plasmic-name={"accountTree"}
                          data-plasmic-override={overrides.accountTree}
                          className={classNames(
                            projectcss.all,
                            sty.accountTree
                          )}
                        >
                          <AccountTree2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__sZegg
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame427320500"}
                        data-plasmic-override={overrides.frame427320500}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame427320500
                        )}
                      >
                        <div
                          data-plasmic-name={"cloud"}
                          data-plasmic-override={overrides.cloud}
                          className={classNames(projectcss.all, sty.cloud)}
                        >
                          <CloudIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rFfu
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                    </Stack__>
                  ) : null}
                  <div
                    data-plasmic-name={"underline"}
                    data-plasmic-override={overrides.underline}
                    className={classNames(projectcss.all, sty.underline)}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"input2"}
                  data-plasmic-override={overrides.input2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.input2)}
                >
                  <div
                    data-plasmic-name={"label2"}
                    data-plasmic-override={overrides.label2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label2
                    )}
                  >
                    {"Give a name to the connector *"}
                  </div>
                  <div
                    data-plasmic-name={"label3"}
                    data-plasmic-override={overrides.label3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label3
                    )}
                  >
                    {"Connector Name"}
                  </div>
                  <div
                    data-plasmic-name={"underline2"}
                    data-plasmic-override={overrides.underline2}
                    className={classNames(projectcss.all, sty.underline2)}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"input3"}
                  data-plasmic-override={overrides.input3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.input3)}
                >
                  <div
                    data-plasmic-name={"label4"}
                    data-plasmic-override={overrides.label4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label4
                    )}
                  >
                    {"Describe what the connector does *"}
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000004846"}
                    data-plasmic-override={overrides.frame1000004846}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000004846)}
                  >
                    <div
                      data-plasmic-name={"label5"}
                      data-plasmic-override={overrides.label5}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label5
                      )}
                    >
                      {
                        'Dummy text to illustrate 320 character summarised answer with ".." . Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum Sed nisi. Nulla quis sem at nibh elementushj hhdukbfh..'
                      }
                    </div>
                    <div
                      data-plasmic-name={"openInFull"}
                      data-plasmic-override={overrides.openInFull}
                      className={classNames(projectcss.all, sty.openInFull)}
                    >
                      <OpenInFullIcon
                        className={classNames(projectcss.all, sty.svg___32WUi)}
                        role={"img"}
                      />
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"input4"}
                  data-plasmic-override={overrides.input4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.input4)}
                >
                  <div
                    data-plasmic-name={"label6"}
                    data-plasmic-override={overrides.label6}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label6
                    )}
                  >
                    {"Choose connector type *"}
                  </div>
                  <div
                    data-plasmic-name={"label7"}
                    data-plasmic-override={overrides.label7}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label7
                    )}
                  >
                    {"Connector Type Name"}
                  </div>
                  <div
                    data-plasmic-name={"underline3"}
                    data-plasmic-override={overrides.underline3}
                    className={classNames(projectcss.all, sty.underline3)}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"input5"}
                  data-plasmic-override={overrides.input5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.input5)}
                >
                  <div
                    data-plasmic-name={"label8"}
                    data-plasmic-override={overrides.label8}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label8
                    )}
                  >
                    {"Set connector status *"}
                  </div>
                  <div
                    data-plasmic-name={"label9"}
                    data-plasmic-override={overrides.label9}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label9
                    )}
                  >
                    {"Active"}
                  </div>
                  <div
                    data-plasmic-name={"underline4"}
                    data-plasmic-override={overrides.underline4}
                    className={classNames(projectcss.all, sty.underline4)}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"source"}
                  data-plasmic-override={overrides.source}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.source)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xsF2O
                    )}
                  >
                    {"Configure Source"}
                  </div>
                  <div
                    data-plasmic-name={"main2"}
                    data-plasmic-override={overrides.main2}
                    className={classNames(projectcss.all, sty.main2)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"layout2"}
                      data-plasmic-override={overrides.layout2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.layout2)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"scroll"}
                        data-plasmic-override={overrides.scroll}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.scroll)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame427320159"}
                          data-plasmic-override={overrides.frame427320159}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame427320159
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320156"}
                            data-plasmic-override={overrides.frame427320156}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320156
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ck4Mj
                              )}
                            >
                              {"Label"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320192"}
                            data-plasmic-override={overrides.frame427320192}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320192
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lwZ40
                              )}
                            >
                              {"Type"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320202"}
                            data-plasmic-override={overrides.frame427320202}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320202
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jqfTz
                              )}
                            >
                              {"Description"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320167"}
                            data-plasmic-override={overrides.frame427320167}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320167
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lpQiV
                              )}
                            >
                              {"Mandatory"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320203"}
                            data-plasmic-override={overrides.frame427320203}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320203
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__f4SA
                              )}
                            >
                              {"Active"}
                            </div>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame427320161"}
                          data-plasmic-override={overrides.frame427320161}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame427320161
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320157"}
                            data-plasmic-override={overrides.frame427320157}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320157
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qtShY
                              )}
                            >
                              {"MongoDB"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320198"}
                            data-plasmic-override={overrides.frame427320198}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320198
                            )}
                          >
                            <div
                              data-plasmic-name={"main3"}
                              data-plasmic-override={overrides.main3}
                              className={classNames(projectcss.all, sty.main3)}
                            >
                              <div
                                data-plasmic-name={"frame1000004815"}
                                data-plasmic-override={
                                  overrides.frame1000004815
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000004815
                                )}
                              >
                                <div
                                  data-plasmic-name={"label10"}
                                  data-plasmic-override={overrides.label10}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.label10
                                  )}
                                >
                                  {"Database"}
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"keyboardArrowDown"}
                                data-plasmic-override={
                                  overrides.keyboardArrowDown
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.keyboardArrowDown
                                )}
                              >
                                <KeyboardArrowDownIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ri2J4
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320204"}
                            data-plasmic-override={overrides.frame427320204}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320204
                            )}
                          >
                            <div
                              data-plasmic-name={
                                "loremIpsumDolorSitAmetConsectetuerAdipiscingElit"
                              }
                              data-plasmic-override={
                                overrides.loremIpsumDolorSitAmetConsectetuerAdipiscingElit
                              }
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.loremIpsumDolorSitAmetConsectetuerAdipiscingElit
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. "
                              }
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004844"}
                            data-plasmic-override={overrides.frame1000004844}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004844
                            )}
                          >
                            <div
                              data-plasmic-name={"label11"}
                              data-plasmic-override={overrides.label11}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label11
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle"}
                              data-plasmic-override={overrides.toggle}
                              className={classNames(projectcss.all, sty.toggle)}
                            >
                              <div
                                data-plasmic-name={"rectangle3467709"}
                                data-plasmic-override={
                                  overrides.rectangle3467709
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467709
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467710"}
                                data-plasmic-override={
                                  overrides.rectangle3467710
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467710
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label12"}
                              data-plasmic-override={overrides.label12}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label12
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004845"}
                            data-plasmic-override={overrides.frame1000004845}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004845
                            )}
                          >
                            <div
                              data-plasmic-name={"label13"}
                              data-plasmic-override={overrides.label13}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label13
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle2"}
                              data-plasmic-override={overrides.toggle2}
                              className={classNames(
                                projectcss.all,
                                sty.toggle2
                              )}
                            >
                              <div
                                data-plasmic-name={"rectangle3467711"}
                                data-plasmic-override={
                                  overrides.rectangle3467711
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467711
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467712"}
                                data-plasmic-override={
                                  overrides.rectangle3467712
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467712
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label14"}
                              data-plasmic-override={overrides.label14}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label14
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame427320162"}
                          data-plasmic-override={overrides.frame427320162}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame427320162
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320158"}
                            data-plasmic-override={overrides.frame427320158}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320158
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xxa9J
                              )}
                            >
                              {"OpenAI"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320199"}
                            data-plasmic-override={overrides.frame427320199}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320199
                            )}
                          >
                            <div
                              data-plasmic-name={"main4"}
                              data-plasmic-override={overrides.main4}
                              className={classNames(projectcss.all, sty.main4)}
                            >
                              <div
                                data-plasmic-name={"frame1000004816"}
                                data-plasmic-override={
                                  overrides.frame1000004816
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000004816
                                )}
                              >
                                <div
                                  data-plasmic-name={"label15"}
                                  data-plasmic-override={overrides.label15}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.label15
                                  )}
                                >
                                  {"API"}
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"keyboardArrowDown2"}
                                data-plasmic-override={
                                  overrides.keyboardArrowDown2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.keyboardArrowDown2
                                )}
                              >
                                <KeyboardArrowDownIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__cdIhG
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320205"}
                            data-plasmic-override={overrides.frame427320205}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320205
                            )}
                          >
                            <div
                              data-plasmic-name={
                                "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2"
                              }
                              data-plasmic-override={
                                overrides.loremIpsumDolorSitAmetConsectetuerAdipiscingElit2
                              }
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.loremIpsumDolorSitAmetConsectetuerAdipiscingElit2
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. "
                              }
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004847"}
                            data-plasmic-override={overrides.frame1000004847}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004847
                            )}
                          >
                            <div
                              data-plasmic-name={"label16"}
                              data-plasmic-override={overrides.label16}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label16
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle3"}
                              data-plasmic-override={overrides.toggle3}
                              className={classNames(
                                projectcss.all,
                                sty.toggle3
                              )}
                            >
                              <div
                                data-plasmic-name={"rectangle3467713"}
                                data-plasmic-override={
                                  overrides.rectangle3467713
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467713
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467714"}
                                data-plasmic-override={
                                  overrides.rectangle3467714
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467714
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label17"}
                              data-plasmic-override={overrides.label17}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label17
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004848"}
                            data-plasmic-override={overrides.frame1000004848}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004848
                            )}
                          >
                            <div
                              data-plasmic-name={"label18"}
                              data-plasmic-override={overrides.label18}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label18
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle4"}
                              data-plasmic-override={overrides.toggle4}
                              className={classNames(
                                projectcss.all,
                                sty.toggle4
                              )}
                            >
                              <div
                                data-plasmic-name={"rectangle3467715"}
                                data-plasmic-override={
                                  overrides.rectangle3467715
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467715
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467716"}
                                data-plasmic-override={
                                  overrides.rectangle3467716
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467716
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label19"}
                              data-plasmic-override={overrides.label19}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label19
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame427320163"}
                          data-plasmic-override={overrides.frame427320163}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame427320163
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320160"}
                            data-plasmic-override={overrides.frame427320160}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320160
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___4Qctf
                              )}
                            >
                              {"SMTP Server"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320206"}
                            data-plasmic-override={overrides.frame427320206}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320206
                            )}
                          >
                            <div
                              data-plasmic-name={"main5"}
                              data-plasmic-override={overrides.main5}
                              className={classNames(projectcss.all, sty.main5)}
                            >
                              <div
                                data-plasmic-name={"frame1000004817"}
                                data-plasmic-override={
                                  overrides.frame1000004817
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000004817
                                )}
                              >
                                <div
                                  data-plasmic-name={"label20"}
                                  data-plasmic-override={overrides.label20}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.label20
                                  )}
                                >
                                  {"Messaging"}
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"keyboardArrowDown3"}
                                data-plasmic-override={
                                  overrides.keyboardArrowDown3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.keyboardArrowDown3
                                )}
                              >
                                <KeyboardArrowDownIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__vi0Fv
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320207"}
                            data-plasmic-override={overrides.frame427320207}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320207
                            )}
                          >
                            <div
                              data-plasmic-name={
                                "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3"
                              }
                              data-plasmic-override={
                                overrides.loremIpsumDolorSitAmetConsectetuerAdipiscingElit3
                              }
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.loremIpsumDolorSitAmetConsectetuerAdipiscingElit3
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. "
                              }
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004849"}
                            data-plasmic-override={overrides.frame1000004849}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004849
                            )}
                          >
                            <div
                              data-plasmic-name={"label21"}
                              data-plasmic-override={overrides.label21}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label21
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle5"}
                              data-plasmic-override={overrides.toggle5}
                              className={classNames(
                                projectcss.all,
                                sty.toggle5
                              )}
                            >
                              <div
                                data-plasmic-name={"rectangle3467717"}
                                data-plasmic-override={
                                  overrides.rectangle3467717
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467717
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467718"}
                                data-plasmic-override={
                                  overrides.rectangle3467718
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467718
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label22"}
                              data-plasmic-override={overrides.label22}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label22
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004850"}
                            data-plasmic-override={overrides.frame1000004850}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004850
                            )}
                          >
                            <div
                              data-plasmic-name={"label23"}
                              data-plasmic-override={overrides.label23}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label23
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle6"}
                              data-plasmic-override={overrides.toggle6}
                              className={classNames(
                                projectcss.all,
                                sty.toggle6
                              )}
                            >
                              <div
                                data-plasmic-name={"rectangle3467719"}
                                data-plasmic-override={
                                  overrides.rectangle3467719
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467719
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467720"}
                                data-plasmic-override={
                                  overrides.rectangle3467720
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467720
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label24"}
                              data-plasmic-override={overrides.label24}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label24
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame427320164"}
                          data-plasmic-override={overrides.frame427320164}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame427320164
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320165"}
                            data-plasmic-override={overrides.frame427320165}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320165
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ad8Op
                              )}
                            >
                              {"Name"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320208"}
                            data-plasmic-override={overrides.frame427320208}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320208
                            )}
                          >
                            <div
                              data-plasmic-name={"main6"}
                              data-plasmic-override={overrides.main6}
                              className={classNames(projectcss.all, sty.main6)}
                            >
                              <div
                                data-plasmic-name={"frame1000004818"}
                                data-plasmic-override={
                                  overrides.frame1000004818
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000004818
                                )}
                              >
                                <div
                                  data-plasmic-name={"label25"}
                                  data-plasmic-override={overrides.label25}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.label25
                                  )}
                                >
                                  {"Type"}
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"keyboardArrowDown4"}
                                data-plasmic-override={
                                  overrides.keyboardArrowDown4
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.keyboardArrowDown4
                                )}
                              >
                                <KeyboardArrowDownIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__qqg1G
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame427320209"}
                            data-plasmic-override={overrides.frame427320209}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame427320209
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___7L5I4
                              )}
                            >
                              {"Description"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004851"}
                            data-plasmic-override={overrides.frame1000004851}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004851
                            )}
                          >
                            <div
                              data-plasmic-name={"label26"}
                              data-plasmic-override={overrides.label26}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label26
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle7"}
                              data-plasmic-override={overrides.toggle7}
                              className={classNames(
                                projectcss.all,
                                sty.toggle7
                              )}
                            >
                              <div
                                data-plasmic-name={"rectangle3467721"}
                                data-plasmic-override={
                                  overrides.rectangle3467721
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467721
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467722"}
                                data-plasmic-override={
                                  overrides.rectangle3467722
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467722
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label27"}
                              data-plasmic-override={overrides.label27}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label27
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004852"}
                            data-plasmic-override={overrides.frame1000004852}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004852
                            )}
                          >
                            <div
                              data-plasmic-name={"label28"}
                              data-plasmic-override={overrides.label28}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label28
                              )}
                            >
                              {"No"}
                            </div>
                            <div
                              data-plasmic-name={"toggle8"}
                              data-plasmic-override={overrides.toggle8}
                              className={classNames(
                                projectcss.all,
                                sty.toggle8
                              )}
                            >
                              <div
                                data-plasmic-name={"rectangle3467723"}
                                data-plasmic-override={
                                  overrides.rectangle3467723
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467723
                                )}
                              />

                              <div
                                data-plasmic-name={"rectangle3467724"}
                                data-plasmic-override={
                                  overrides.rectangle3467724
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.rectangle3467724
                                )}
                              />
                            </div>
                            <div
                              data-plasmic-name={"label29"}
                              data-plasmic-override={overrides.label29}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.label29
                              )}
                            >
                              {"Yes"}
                            </div>
                          </Stack__>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1000004820"}
                        data-plasmic-override={overrides.frame1000004820}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1000004820
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame427320508"}
                          data-plasmic-override={overrides.frame427320508}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame427320508
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame1000004853"}
                            data-plasmic-override={overrides.frame1000004853}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000004853
                            )}
                          >
                            <div
                              data-plasmic-name={"add"}
                              data-plasmic-override={overrides.add}
                              className={classNames(projectcss.all, sty.add)}
                            >
                              <AddIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kXww
                                )}
                                role={"img"}
                              />
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nsrs8
                              )}
                            >
                              {"Add Row"}
                            </div>
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </div>
                </Stack__>
              </Stack__>
            </div>
          </Stack__>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "config",
    "spaceTitle",
    "title",
    "connectorsInUse",
    "connectorsInUse2",
    "clickOnTheAnyConnectorToViewOrModify",
    "clickOnTheAnyConnectorToViewOrModify2",
    "buttons",
    "secondary",
    "frame1000004774",
    "create",
    "primary",
    "addMore",
    "layout",
    "autoLayout",
    "input",
    "main",
    "inner",
    "label",
    "backup",
    "frame1000004808",
    "frame427320505",
    "deployedCode",
    "frame427320506",
    "personCheck",
    "frame427320504",
    "verifiedUser",
    "frame427320503",
    "science",
    "frame427320498",
    "findInPage",
    "frame427320502",
    "barChart",
    "frame427320501",
    "search",
    "frame427320499",
    "code",
    "frame427320507",
    "editNote",
    "frame427320490",
    "accountTree",
    "frame427320500",
    "cloud",
    "underline",
    "input2",
    "label2",
    "label3",
    "underline2",
    "input3",
    "label4",
    "frame1000004846",
    "label5",
    "openInFull",
    "input4",
    "label6",
    "label7",
    "underline3",
    "input5",
    "label8",
    "label9",
    "underline4",
    "source",
    "main2",
    "layout2",
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29",
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  config: [
    "config",
    "spaceTitle",
    "title",
    "connectorsInUse",
    "connectorsInUse2",
    "clickOnTheAnyConnectorToViewOrModify",
    "clickOnTheAnyConnectorToViewOrModify2",
    "buttons",
    "secondary",
    "frame1000004774",
    "create",
    "primary",
    "addMore",
    "layout",
    "autoLayout",
    "input",
    "main",
    "inner",
    "label",
    "backup",
    "frame1000004808",
    "frame427320505",
    "deployedCode",
    "frame427320506",
    "personCheck",
    "frame427320504",
    "verifiedUser",
    "frame427320503",
    "science",
    "frame427320498",
    "findInPage",
    "frame427320502",
    "barChart",
    "frame427320501",
    "search",
    "frame427320499",
    "code",
    "frame427320507",
    "editNote",
    "frame427320490",
    "accountTree",
    "frame427320500",
    "cloud",
    "underline",
    "input2",
    "label2",
    "label3",
    "underline2",
    "input3",
    "label4",
    "frame1000004846",
    "label5",
    "openInFull",
    "input4",
    "label6",
    "label7",
    "underline3",
    "input5",
    "label8",
    "label9",
    "underline4",
    "source",
    "main2",
    "layout2",
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29",
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  spaceTitle: [
    "spaceTitle",
    "title",
    "connectorsInUse",
    "connectorsInUse2",
    "clickOnTheAnyConnectorToViewOrModify",
    "clickOnTheAnyConnectorToViewOrModify2",
    "buttons",
    "secondary",
    "frame1000004774",
    "create",
    "primary",
    "addMore"
  ],
  title: [
    "title",
    "connectorsInUse",
    "connectorsInUse2",
    "clickOnTheAnyConnectorToViewOrModify",
    "clickOnTheAnyConnectorToViewOrModify2"
  ],
  connectorsInUse: ["connectorsInUse", "connectorsInUse2"],
  connectorsInUse2: ["connectorsInUse2"],
  clickOnTheAnyConnectorToViewOrModify: [
    "clickOnTheAnyConnectorToViewOrModify",
    "clickOnTheAnyConnectorToViewOrModify2"
  ],
  clickOnTheAnyConnectorToViewOrModify2: [
    "clickOnTheAnyConnectorToViewOrModify2"
  ],
  buttons: [
    "buttons",
    "secondary",
    "frame1000004774",
    "create",
    "primary",
    "addMore"
  ],
  secondary: ["secondary", "frame1000004774", "create"],
  frame1000004774: ["frame1000004774", "create"],
  create: ["create"],
  primary: ["primary", "addMore"],
  addMore: ["addMore"],
  layout: [
    "layout",
    "autoLayout",
    "input",
    "main",
    "inner",
    "label",
    "backup",
    "frame1000004808",
    "frame427320505",
    "deployedCode",
    "frame427320506",
    "personCheck",
    "frame427320504",
    "verifiedUser",
    "frame427320503",
    "science",
    "frame427320498",
    "findInPage",
    "frame427320502",
    "barChart",
    "frame427320501",
    "search",
    "frame427320499",
    "code",
    "frame427320507",
    "editNote",
    "frame427320490",
    "accountTree",
    "frame427320500",
    "cloud",
    "underline",
    "input2",
    "label2",
    "label3",
    "underline2",
    "input3",
    "label4",
    "frame1000004846",
    "label5",
    "openInFull",
    "input4",
    "label6",
    "label7",
    "underline3",
    "input5",
    "label8",
    "label9",
    "underline4",
    "source",
    "main2",
    "layout2",
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29",
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  autoLayout: [
    "autoLayout",
    "input",
    "main",
    "inner",
    "label",
    "backup",
    "frame1000004808",
    "frame427320505",
    "deployedCode",
    "frame427320506",
    "personCheck",
    "frame427320504",
    "verifiedUser",
    "frame427320503",
    "science",
    "frame427320498",
    "findInPage",
    "frame427320502",
    "barChart",
    "frame427320501",
    "search",
    "frame427320499",
    "code",
    "frame427320507",
    "editNote",
    "frame427320490",
    "accountTree",
    "frame427320500",
    "cloud",
    "underline",
    "input2",
    "label2",
    "label3",
    "underline2",
    "input3",
    "label4",
    "frame1000004846",
    "label5",
    "openInFull",
    "input4",
    "label6",
    "label7",
    "underline3",
    "input5",
    "label8",
    "label9",
    "underline4",
    "source",
    "main2",
    "layout2",
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29",
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  input: [
    "input",
    "main",
    "inner",
    "label",
    "backup",
    "frame1000004808",
    "frame427320505",
    "deployedCode",
    "frame427320506",
    "personCheck",
    "frame427320504",
    "verifiedUser",
    "frame427320503",
    "science",
    "frame427320498",
    "findInPage",
    "frame427320502",
    "barChart",
    "frame427320501",
    "search",
    "frame427320499",
    "code",
    "frame427320507",
    "editNote",
    "frame427320490",
    "accountTree",
    "frame427320500",
    "cloud",
    "underline"
  ],
  main: ["main", "inner", "label", "backup"],
  inner: ["inner", "label"],
  label: ["label"],
  backup: ["backup"],
  frame1000004808: [
    "frame1000004808",
    "frame427320505",
    "deployedCode",
    "frame427320506",
    "personCheck",
    "frame427320504",
    "verifiedUser",
    "frame427320503",
    "science",
    "frame427320498",
    "findInPage",
    "frame427320502",
    "barChart",
    "frame427320501",
    "search",
    "frame427320499",
    "code",
    "frame427320507",
    "editNote",
    "frame427320490",
    "accountTree",
    "frame427320500",
    "cloud"
  ],
  frame427320505: ["frame427320505", "deployedCode"],
  deployedCode: ["deployedCode"],
  frame427320506: ["frame427320506", "personCheck"],
  personCheck: ["personCheck"],
  frame427320504: ["frame427320504", "verifiedUser"],
  verifiedUser: ["verifiedUser"],
  frame427320503: ["frame427320503", "science"],
  science: ["science"],
  frame427320498: ["frame427320498", "findInPage"],
  findInPage: ["findInPage"],
  frame427320502: ["frame427320502", "barChart"],
  barChart: ["barChart"],
  frame427320501: ["frame427320501", "search"],
  search: ["search"],
  frame427320499: ["frame427320499", "code"],
  code: ["code"],
  frame427320507: ["frame427320507", "editNote"],
  editNote: ["editNote"],
  frame427320490: ["frame427320490", "accountTree"],
  accountTree: ["accountTree"],
  frame427320500: ["frame427320500", "cloud"],
  cloud: ["cloud"],
  underline: ["underline"],
  input2: ["input2", "label2", "label3", "underline2"],
  label2: ["label2"],
  label3: ["label3"],
  underline2: ["underline2"],
  input3: ["input3", "label4", "frame1000004846", "label5", "openInFull"],
  label4: ["label4"],
  frame1000004846: ["frame1000004846", "label5", "openInFull"],
  label5: ["label5"],
  openInFull: ["openInFull"],
  input4: ["input4", "label6", "label7", "underline3"],
  label6: ["label6"],
  label7: ["label7"],
  underline3: ["underline3"],
  input5: ["input5", "label8", "label9", "underline4"],
  label8: ["label8"],
  label9: ["label9"],
  underline4: ["underline4"],
  source: [
    "source",
    "main2",
    "layout2",
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29",
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  main2: [
    "main2",
    "layout2",
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29",
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  layout2: [
    "layout2",
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29",
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  scroll: [
    "scroll",
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203",
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14",
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19",
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24",
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29"
  ],
  frame427320159: [
    "frame427320159",
    "frame427320156",
    "frame427320192",
    "frame427320202",
    "frame427320167",
    "frame427320203"
  ],
  frame427320156: ["frame427320156"],
  frame427320192: ["frame427320192"],
  frame427320202: ["frame427320202"],
  frame427320167: ["frame427320167"],
  frame427320203: ["frame427320203"],
  frame427320161: [
    "frame427320161",
    "frame427320157",
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown",
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit",
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12",
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14"
  ],
  frame427320157: ["frame427320157"],
  frame427320198: [
    "frame427320198",
    "main3",
    "frame1000004815",
    "label10",
    "keyboardArrowDown"
  ],
  main3: ["main3", "frame1000004815", "label10", "keyboardArrowDown"],
  frame1000004815: ["frame1000004815", "label10"],
  label10: ["label10"],
  keyboardArrowDown: ["keyboardArrowDown"],
  frame427320204: [
    "frame427320204",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit"
  ],
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit: [
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit"
  ],
  frame1000004844: [
    "frame1000004844",
    "label11",
    "toggle",
    "rectangle3467709",
    "rectangle3467710",
    "label12"
  ],
  label11: ["label11"],
  toggle: ["toggle", "rectangle3467709", "rectangle3467710"],
  rectangle3467709: ["rectangle3467709"],
  rectangle3467710: ["rectangle3467710"],
  label12: ["label12"],
  frame1000004845: [
    "frame1000004845",
    "label13",
    "toggle2",
    "rectangle3467711",
    "rectangle3467712",
    "label14"
  ],
  label13: ["label13"],
  toggle2: ["toggle2", "rectangle3467711", "rectangle3467712"],
  rectangle3467711: ["rectangle3467711"],
  rectangle3467712: ["rectangle3467712"],
  label14: ["label14"],
  frame427320162: [
    "frame427320162",
    "frame427320158",
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2",
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2",
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17",
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19"
  ],
  frame427320158: ["frame427320158"],
  frame427320199: [
    "frame427320199",
    "main4",
    "frame1000004816",
    "label15",
    "keyboardArrowDown2"
  ],
  main4: ["main4", "frame1000004816", "label15", "keyboardArrowDown2"],
  frame1000004816: ["frame1000004816", "label15"],
  label15: ["label15"],
  keyboardArrowDown2: ["keyboardArrowDown2"],
  frame427320205: [
    "frame427320205",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2"
  ],
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit2: [
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2"
  ],
  frame1000004847: [
    "frame1000004847",
    "label16",
    "toggle3",
    "rectangle3467713",
    "rectangle3467714",
    "label17"
  ],
  label16: ["label16"],
  toggle3: ["toggle3", "rectangle3467713", "rectangle3467714"],
  rectangle3467713: ["rectangle3467713"],
  rectangle3467714: ["rectangle3467714"],
  label17: ["label17"],
  frame1000004848: [
    "frame1000004848",
    "label18",
    "toggle4",
    "rectangle3467715",
    "rectangle3467716",
    "label19"
  ],
  label18: ["label18"],
  toggle4: ["toggle4", "rectangle3467715", "rectangle3467716"],
  rectangle3467715: ["rectangle3467715"],
  rectangle3467716: ["rectangle3467716"],
  label19: ["label19"],
  frame427320163: [
    "frame427320163",
    "frame427320160",
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3",
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3",
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22",
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24"
  ],
  frame427320160: ["frame427320160"],
  frame427320206: [
    "frame427320206",
    "main5",
    "frame1000004817",
    "label20",
    "keyboardArrowDown3"
  ],
  main5: ["main5", "frame1000004817", "label20", "keyboardArrowDown3"],
  frame1000004817: ["frame1000004817", "label20"],
  label20: ["label20"],
  keyboardArrowDown3: ["keyboardArrowDown3"],
  frame427320207: [
    "frame427320207",
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3"
  ],
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit3: [
    "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3"
  ],
  frame1000004849: [
    "frame1000004849",
    "label21",
    "toggle5",
    "rectangle3467717",
    "rectangle3467718",
    "label22"
  ],
  label21: ["label21"],
  toggle5: ["toggle5", "rectangle3467717", "rectangle3467718"],
  rectangle3467717: ["rectangle3467717"],
  rectangle3467718: ["rectangle3467718"],
  label22: ["label22"],
  frame1000004850: [
    "frame1000004850",
    "label23",
    "toggle6",
    "rectangle3467719",
    "rectangle3467720",
    "label24"
  ],
  label23: ["label23"],
  toggle6: ["toggle6", "rectangle3467719", "rectangle3467720"],
  rectangle3467719: ["rectangle3467719"],
  rectangle3467720: ["rectangle3467720"],
  label24: ["label24"],
  frame427320164: [
    "frame427320164",
    "frame427320165",
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4",
    "frame427320209",
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27",
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29"
  ],
  frame427320165: ["frame427320165"],
  frame427320208: [
    "frame427320208",
    "main6",
    "frame1000004818",
    "label25",
    "keyboardArrowDown4"
  ],
  main6: ["main6", "frame1000004818", "label25", "keyboardArrowDown4"],
  frame1000004818: ["frame1000004818", "label25"],
  label25: ["label25"],
  keyboardArrowDown4: ["keyboardArrowDown4"],
  frame427320209: ["frame427320209"],
  frame1000004851: [
    "frame1000004851",
    "label26",
    "toggle7",
    "rectangle3467721",
    "rectangle3467722",
    "label27"
  ],
  label26: ["label26"],
  toggle7: ["toggle7", "rectangle3467721", "rectangle3467722"],
  rectangle3467721: ["rectangle3467721"],
  rectangle3467722: ["rectangle3467722"],
  label27: ["label27"],
  frame1000004852: [
    "frame1000004852",
    "label28",
    "toggle8",
    "rectangle3467723",
    "rectangle3467724",
    "label29"
  ],
  label28: ["label28"],
  toggle8: ["toggle8", "rectangle3467723", "rectangle3467724"],
  rectangle3467723: ["rectangle3467723"],
  rectangle3467724: ["rectangle3467724"],
  label29: ["label29"],
  frame1000004820: [
    "frame1000004820",
    "frame427320508",
    "frame1000004853",
    "add"
  ],
  frame427320508: ["frame427320508", "frame1000004853", "add"],
  frame1000004853: ["frame1000004853", "add"],
  add: ["add"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  config: "div";
  spaceTitle: "div";
  title: "div";
  connectorsInUse: "div";
  connectorsInUse2: "div";
  clickOnTheAnyConnectorToViewOrModify: "div";
  clickOnTheAnyConnectorToViewOrModify2: "div";
  buttons: "div";
  secondary: "div";
  frame1000004774: "div";
  create: "div";
  primary: "div";
  addMore: "div";
  layout: "div";
  autoLayout: "div";
  input: "div";
  main: "div";
  inner: "div";
  label: "div";
  backup: "div";
  frame1000004808: "div";
  frame427320505: "div";
  deployedCode: "div";
  frame427320506: "div";
  personCheck: "div";
  frame427320504: "div";
  verifiedUser: "div";
  frame427320503: "div";
  science: "div";
  frame427320498: "div";
  findInPage: "div";
  frame427320502: "div";
  barChart: "div";
  frame427320501: "div";
  search: "div";
  frame427320499: "div";
  code: "div";
  frame427320507: "div";
  editNote: "div";
  frame427320490: "div";
  accountTree: "div";
  frame427320500: "div";
  cloud: "div";
  underline: "div";
  input2: "div";
  label2: "div";
  label3: "div";
  underline2: "div";
  input3: "div";
  label4: "div";
  frame1000004846: "div";
  label5: "div";
  openInFull: "div";
  input4: "div";
  label6: "div";
  label7: "div";
  underline3: "div";
  input5: "div";
  label8: "div";
  label9: "div";
  underline4: "div";
  source: "div";
  main2: "div";
  layout2: "div";
  scroll: "div";
  frame427320159: "div";
  frame427320156: "div";
  frame427320192: "div";
  frame427320202: "div";
  frame427320167: "div";
  frame427320203: "div";
  frame427320161: "div";
  frame427320157: "div";
  frame427320198: "div";
  main3: "div";
  frame1000004815: "div";
  label10: "div";
  keyboardArrowDown: "div";
  frame427320204: "div";
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit: "div";
  frame1000004844: "div";
  label11: "div";
  toggle: "div";
  rectangle3467709: "div";
  rectangle3467710: "div";
  label12: "div";
  frame1000004845: "div";
  label13: "div";
  toggle2: "div";
  rectangle3467711: "div";
  rectangle3467712: "div";
  label14: "div";
  frame427320162: "div";
  frame427320158: "div";
  frame427320199: "div";
  main4: "div";
  frame1000004816: "div";
  label15: "div";
  keyboardArrowDown2: "div";
  frame427320205: "div";
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit2: "div";
  frame1000004847: "div";
  label16: "div";
  toggle3: "div";
  rectangle3467713: "div";
  rectangle3467714: "div";
  label17: "div";
  frame1000004848: "div";
  label18: "div";
  toggle4: "div";
  rectangle3467715: "div";
  rectangle3467716: "div";
  label19: "div";
  frame427320163: "div";
  frame427320160: "div";
  frame427320206: "div";
  main5: "div";
  frame1000004817: "div";
  label20: "div";
  keyboardArrowDown3: "div";
  frame427320207: "div";
  loremIpsumDolorSitAmetConsectetuerAdipiscingElit3: "div";
  frame1000004849: "div";
  label21: "div";
  toggle5: "div";
  rectangle3467717: "div";
  rectangle3467718: "div";
  label22: "div";
  frame1000004850: "div";
  label23: "div";
  toggle6: "div";
  rectangle3467719: "div";
  rectangle3467720: "div";
  label24: "div";
  frame427320164: "div";
  frame427320165: "div";
  frame427320208: "div";
  main6: "div";
  frame1000004818: "div";
  label25: "div";
  keyboardArrowDown4: "div";
  frame427320209: "div";
  frame1000004851: "div";
  label26: "div";
  toggle7: "div";
  rectangle3467721: "div";
  rectangle3467722: "div";
  label27: "div";
  frame1000004852: "div";
  label28: "div";
  toggle8: "div";
  rectangle3467723: "div";
  rectangle3467724: "div";
  label29: "div";
  frame1000004820: "div";
  frame427320508: "div";
  frame1000004853: "div";
  add: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicToolsCards__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicToolsCards__VariantsArgs;
    args?: PlasmicToolsCards__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicToolsCards__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicToolsCards__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicToolsCards__ArgProps,
          internalVariantPropNames: PlasmicToolsCards__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicToolsCards__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicToolsCards";
  } else {
    func.displayName = `PlasmicToolsCards.${nodeName}`;
  }
  return func;
}

export const PlasmicToolsCards = Object.assign(
  // Top-level PlasmicToolsCards renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    config: makeNodeComponent("config"),
    spaceTitle: makeNodeComponent("spaceTitle"),
    title: makeNodeComponent("title"),
    connectorsInUse: makeNodeComponent("connectorsInUse"),
    connectorsInUse2: makeNodeComponent("connectorsInUse2"),
    clickOnTheAnyConnectorToViewOrModify: makeNodeComponent(
      "clickOnTheAnyConnectorToViewOrModify"
    ),
    clickOnTheAnyConnectorToViewOrModify2: makeNodeComponent(
      "clickOnTheAnyConnectorToViewOrModify2"
    ),
    buttons: makeNodeComponent("buttons"),
    secondary: makeNodeComponent("secondary"),
    frame1000004774: makeNodeComponent("frame1000004774"),
    create: makeNodeComponent("create"),
    primary: makeNodeComponent("primary"),
    addMore: makeNodeComponent("addMore"),
    layout: makeNodeComponent("layout"),
    autoLayout: makeNodeComponent("autoLayout"),
    input: makeNodeComponent("input"),
    main: makeNodeComponent("main"),
    inner: makeNodeComponent("inner"),
    label: makeNodeComponent("label"),
    backup: makeNodeComponent("backup"),
    frame1000004808: makeNodeComponent("frame1000004808"),
    frame427320505: makeNodeComponent("frame427320505"),
    deployedCode: makeNodeComponent("deployedCode"),
    frame427320506: makeNodeComponent("frame427320506"),
    personCheck: makeNodeComponent("personCheck"),
    frame427320504: makeNodeComponent("frame427320504"),
    verifiedUser: makeNodeComponent("verifiedUser"),
    frame427320503: makeNodeComponent("frame427320503"),
    science: makeNodeComponent("science"),
    frame427320498: makeNodeComponent("frame427320498"),
    findInPage: makeNodeComponent("findInPage"),
    frame427320502: makeNodeComponent("frame427320502"),
    barChart: makeNodeComponent("barChart"),
    frame427320501: makeNodeComponent("frame427320501"),
    search: makeNodeComponent("search"),
    frame427320499: makeNodeComponent("frame427320499"),
    code: makeNodeComponent("code"),
    frame427320507: makeNodeComponent("frame427320507"),
    editNote: makeNodeComponent("editNote"),
    frame427320490: makeNodeComponent("frame427320490"),
    accountTree: makeNodeComponent("accountTree"),
    frame427320500: makeNodeComponent("frame427320500"),
    cloud: makeNodeComponent("cloud"),
    underline: makeNodeComponent("underline"),
    input2: makeNodeComponent("input2"),
    label2: makeNodeComponent("label2"),
    label3: makeNodeComponent("label3"),
    underline2: makeNodeComponent("underline2"),
    input3: makeNodeComponent("input3"),
    label4: makeNodeComponent("label4"),
    frame1000004846: makeNodeComponent("frame1000004846"),
    label5: makeNodeComponent("label5"),
    openInFull: makeNodeComponent("openInFull"),
    input4: makeNodeComponent("input4"),
    label6: makeNodeComponent("label6"),
    label7: makeNodeComponent("label7"),
    underline3: makeNodeComponent("underline3"),
    input5: makeNodeComponent("input5"),
    label8: makeNodeComponent("label8"),
    label9: makeNodeComponent("label9"),
    underline4: makeNodeComponent("underline4"),
    source: makeNodeComponent("source"),
    main2: makeNodeComponent("main2"),
    layout2: makeNodeComponent("layout2"),
    scroll: makeNodeComponent("scroll"),
    frame427320159: makeNodeComponent("frame427320159"),
    frame427320156: makeNodeComponent("frame427320156"),
    frame427320192: makeNodeComponent("frame427320192"),
    frame427320202: makeNodeComponent("frame427320202"),
    frame427320167: makeNodeComponent("frame427320167"),
    frame427320203: makeNodeComponent("frame427320203"),
    frame427320161: makeNodeComponent("frame427320161"),
    frame427320157: makeNodeComponent("frame427320157"),
    frame427320198: makeNodeComponent("frame427320198"),
    main3: makeNodeComponent("main3"),
    frame1000004815: makeNodeComponent("frame1000004815"),
    label10: makeNodeComponent("label10"),
    keyboardArrowDown: makeNodeComponent("keyboardArrowDown"),
    frame427320204: makeNodeComponent("frame427320204"),
    loremIpsumDolorSitAmetConsectetuerAdipiscingElit: makeNodeComponent(
      "loremIpsumDolorSitAmetConsectetuerAdipiscingElit"
    ),
    frame1000004844: makeNodeComponent("frame1000004844"),
    label11: makeNodeComponent("label11"),
    toggle: makeNodeComponent("toggle"),
    rectangle3467709: makeNodeComponent("rectangle3467709"),
    rectangle3467710: makeNodeComponent("rectangle3467710"),
    label12: makeNodeComponent("label12"),
    frame1000004845: makeNodeComponent("frame1000004845"),
    label13: makeNodeComponent("label13"),
    toggle2: makeNodeComponent("toggle2"),
    rectangle3467711: makeNodeComponent("rectangle3467711"),
    rectangle3467712: makeNodeComponent("rectangle3467712"),
    label14: makeNodeComponent("label14"),
    frame427320162: makeNodeComponent("frame427320162"),
    frame427320158: makeNodeComponent("frame427320158"),
    frame427320199: makeNodeComponent("frame427320199"),
    main4: makeNodeComponent("main4"),
    frame1000004816: makeNodeComponent("frame1000004816"),
    label15: makeNodeComponent("label15"),
    keyboardArrowDown2: makeNodeComponent("keyboardArrowDown2"),
    frame427320205: makeNodeComponent("frame427320205"),
    loremIpsumDolorSitAmetConsectetuerAdipiscingElit2: makeNodeComponent(
      "loremIpsumDolorSitAmetConsectetuerAdipiscingElit2"
    ),
    frame1000004847: makeNodeComponent("frame1000004847"),
    label16: makeNodeComponent("label16"),
    toggle3: makeNodeComponent("toggle3"),
    rectangle3467713: makeNodeComponent("rectangle3467713"),
    rectangle3467714: makeNodeComponent("rectangle3467714"),
    label17: makeNodeComponent("label17"),
    frame1000004848: makeNodeComponent("frame1000004848"),
    label18: makeNodeComponent("label18"),
    toggle4: makeNodeComponent("toggle4"),
    rectangle3467715: makeNodeComponent("rectangle3467715"),
    rectangle3467716: makeNodeComponent("rectangle3467716"),
    label19: makeNodeComponent("label19"),
    frame427320163: makeNodeComponent("frame427320163"),
    frame427320160: makeNodeComponent("frame427320160"),
    frame427320206: makeNodeComponent("frame427320206"),
    main5: makeNodeComponent("main5"),
    frame1000004817: makeNodeComponent("frame1000004817"),
    label20: makeNodeComponent("label20"),
    keyboardArrowDown3: makeNodeComponent("keyboardArrowDown3"),
    frame427320207: makeNodeComponent("frame427320207"),
    loremIpsumDolorSitAmetConsectetuerAdipiscingElit3: makeNodeComponent(
      "loremIpsumDolorSitAmetConsectetuerAdipiscingElit3"
    ),
    frame1000004849: makeNodeComponent("frame1000004849"),
    label21: makeNodeComponent("label21"),
    toggle5: makeNodeComponent("toggle5"),
    rectangle3467717: makeNodeComponent("rectangle3467717"),
    rectangle3467718: makeNodeComponent("rectangle3467718"),
    label22: makeNodeComponent("label22"),
    frame1000004850: makeNodeComponent("frame1000004850"),
    label23: makeNodeComponent("label23"),
    toggle6: makeNodeComponent("toggle6"),
    rectangle3467719: makeNodeComponent("rectangle3467719"),
    rectangle3467720: makeNodeComponent("rectangle3467720"),
    label24: makeNodeComponent("label24"),
    frame427320164: makeNodeComponent("frame427320164"),
    frame427320165: makeNodeComponent("frame427320165"),
    frame427320208: makeNodeComponent("frame427320208"),
    main6: makeNodeComponent("main6"),
    frame1000004818: makeNodeComponent("frame1000004818"),
    label25: makeNodeComponent("label25"),
    keyboardArrowDown4: makeNodeComponent("keyboardArrowDown4"),
    frame427320209: makeNodeComponent("frame427320209"),
    frame1000004851: makeNodeComponent("frame1000004851"),
    label26: makeNodeComponent("label26"),
    toggle7: makeNodeComponent("toggle7"),
    rectangle3467721: makeNodeComponent("rectangle3467721"),
    rectangle3467722: makeNodeComponent("rectangle3467722"),
    label27: makeNodeComponent("label27"),
    frame1000004852: makeNodeComponent("frame1000004852"),
    label28: makeNodeComponent("label28"),
    toggle8: makeNodeComponent("toggle8"),
    rectangle3467723: makeNodeComponent("rectangle3467723"),
    rectangle3467724: makeNodeComponent("rectangle3467724"),
    label29: makeNodeComponent("label29"),
    frame1000004820: makeNodeComponent("frame1000004820"),
    frame427320508: makeNodeComponent("frame427320508"),
    frame1000004853: makeNodeComponent("frame1000004853"),
    add: makeNodeComponent("add"),

    // Metadata about props expected for PlasmicToolsCards
    internalVariantProps: PlasmicToolsCards__VariantProps,
    internalArgProps: PlasmicToolsCards__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicToolsCards;
/* prettier-ignore-end */
